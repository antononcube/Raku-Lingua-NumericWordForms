use Test;

# use lib <. lib>;

use Lingua::NumericWordForms;

plan *;

#-----------------------------------------------------------
# Armenian numeric word form generation
#-----------------------------------------------------------
# Map[IntegerName[#, "Armenian"] &, {1500, 1023, 6023, 120211, 456}]

## 1
is
        to-numeric-word-form(1500, lang => 'Armenian'),
        'մեկ հազար հինգ հարյուր',
        'մեկ հազար հինգ հարյուր';

## 2
is
        to-numeric-word-form(1023, 'Armenian'),
        'մեկ հազար քսան երեք',
        'մեկ հազար քսան երեք';

## 3
is
        to-numeric-word-form(6023, 'Armenian'),
        'վեց հազար քսան երեք',
        'վեց հազար քսան երեք';

## 4
is
        to-numeric-word-form(120_211, 'Armenian'),
        'հարյուր քսան հազար երկու հարյուր տասն մեկ',
        '(մեկ) հարյուր քսան հազար երկու հարյուր տասն մեկ';

## 5
is
        to-numeric-word-form(456, 'Armenian'),
        'չորս հարյուր հիսուն վեց',
        'չորս հարյուր հիսուն վեց';

## 6
my @testPairs6 = [
    33 => "երեսուն երեք",
    122 => "հարյուր քսան երկու",
    546 => "հինգ հարյուր քառասուն վեց",
    12_091 => "տասն երկու հազար իննասուն մեկ",
    5_087_456 => "հինգ միլիօն ութսուն յոթ հազար չորս հարյուր հիսուն վեց"
];

# Map[IntegerName[#, "Armenian"] &, {33, 122, 546, 12091, 5087456}]
subtest {
        for @testPairs6 -> $p {
        is-deeply
                to-numeric-word-form($p.key, lang => 'Armenian'),
                $p.value,
                "list of numbers {$p.key}";
        }
}, "Check list of numbers";

done-testing;